version: '3.8'
services:
  #Docker Compose creates a virtual network between the services and the DNS name
  #used for each service is its name: that’s why it’s possible to use eureka-discovery as the hostname.
  registry-discovery:
    container_name: id-eureka
    image: paymentsproject/microservice-docker-eureka-server:1.0.0-SNAPSHOT
    ports:
      - 8761:8761
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M

  ##########################################################################
  #configuration service
  ##########################################################################
  configuration:
    container_name: id-config
    image: paymentsproject/microservice-docker-config-server:1.0.0-SNAPSHOT
    volumes:
      #this it use because we are using a local github repository /host/path:/container/path use ./ for relative path
      - /media/karla/DATOS/Proyectos/Microservices/config-server-repo:/tmp/config-server-repo
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
        -DLOCAL_REPOSITORY=/tmp/config-server-repo
      #-Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - registry-discovery
    ports:
      - 8888:8888

  ##########################################################################
  #administration service
  ##########################################################################
  administration:
    container_name: id-admin
    image: paymentsproject/microservice-docker-admin-server:1.0.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
      #-Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - registry-discovery
    ports:
      - 8762:8762

  ##########################################################################
  #api gateway service
  ##########################################################################
  apigateway:
    container_name: id-apigateway
    image: paymentsproject/microservice-docker-api-gateway:1.0.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
      #-Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - registry-discovery
    ports:
      - 8080:8080

  ##########################################################################
  #product service
  ##########################################################################
  product-catalog:
    container_name: bd-product-catalog
    image: paymentsproject/microservice-docker-product:1.0.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
    depends_on:
      - registry-discovery
      - configuration
    ports:
      - 8083:8083

  ##########################################################################
  #customer service
  ##########################################################################
  customer:
    container_name: bd-customer
    image: paymentsproject/microservice-docker-customer:1.0.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
        -Dspring.profiles.active=development
    depends_on:
      - registry-discovery
      - configuration

  ##########################################################################
  #transaction service
  ##########################################################################
  transactions:
    container_name: bd-transactions
    image: paymentsproject/microservice-docker-transactions:1.0.0-SNAPSHOT
    environment:
      - JAVA_OPTS=
        -Xms256M
        -Xmx256M
        -DEUREKA_SERVER=http://registry-discovery:8761/eureka/
        -Dspring.profiles.active=development
    depends_on:
      - registry-discovery
      - configuration
    ports:
      - 8082:8082

  ##########################################################################
  #database service
  ##########################################################################
  postgres_db:
    container_name: postgres
    image: postgres:latest
    ports:
      - 3432:5432
    volumes:
      #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
      - ./dbfiles:/docker-entrypoint-initdb.d
      - /var/lib/postgres_data:/var/lib/postgresql/data
    environment:
      #default postgres super user
      POSTGRES_USER: postgres
      #default passwor for postgres super user, it is only the required envvar for postgres image
      POSTGRES_PASSWORD: qwerty
      #main database if name is not specific the name of super user is use
      POSTGRES_DB: postgres

  ##########################################################################
  #pgadmin service
  ##########################################################################
  pgadmin4:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "qwerty"
    ports:
      - 80:80
    depends_on:
      - postgres_db

  ##########################################################################
  #keycloack Server
  ##########################################################################
  keycloack_server:
    container_name: id-keycloackServer
    image: jboss/keycloak
    restart: always
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: H2
    ports:
      - 8091:8080
